type GameResult @entity {
  id: ID!
  player: Bytes!
  score: BigInt!
  timestamp: BigInt!
  prizeAmount: BigInt
  transactionHash: Bytes!
  isHighScore: Boolean!
}

type GameStats @entity {
  id: ID!
  totalGamesPlayed: BigInt!
  totalPrizePool: BigInt!
  currentHighScore: BigInt!
  currentHighScoreHolder: Bytes!
  highScoreTimestamp: BigInt!
  protocolFees: BigInt!
}

type HighScore @entity {
  id: ID!
  score: BigInt!
  holder: Bytes!
  timestamp: BigInt!
}

type PrizeClaim @entity {
  id: ID!
  winner: Bytes!
  amount: BigInt!
  score: BigInt!
  timestamp: BigInt!
}

type GamePlayed @entity {
  id: ID!
  player: Bytes!
  score: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
  gameCost: BigInt!
  protocolFee: BigInt!
  prizePoolShare: BigInt!
}

type ConfigUpdated @entity {
  id: ID!
  parameter: String!
  oldValue: BigInt!
  newValue: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
  updatedBy: Bytes!
}

type ProtocolFeeWithdrawal @entity {
  id: ID!
  amount: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type PrizePoolFunding @entity {
  id: ID!
  amount: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type GameSession @entity {
  id: ID!
  player: Bytes!
  startTime: BigInt!
  endTime: BigInt
  score: BigInt
  isActive: Boolean!
  transactionHash: Bytes!
} 